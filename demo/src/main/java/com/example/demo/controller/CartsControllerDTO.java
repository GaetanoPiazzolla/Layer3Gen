package com.example.demo.controller;

import com.example.demo.model.Carts;
import com.example.demo.controller.dto.CartsDTO;
import com.example.demo.service.CartsService;
import com.example.demo.service.mapper.CartsMapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
* Generated by Springboot-3layer-Generator at 1 nov 2020, 11:10:29
*/
@RestController
@RequestMapping("/carts-dto/")
public class CartsControllerDTO implements CrudController<CartsDTO,java.lang.Integer>{

    @Autowired
    private CartsService service;

    @Autowired
    private CartsMapper mapper;

    @Override
    public ResponseEntity<CartsDTO> create(@RequestBody CartsDTO dto) {
       Carts entity = mapper.toEntity(dto);
       entity = service.create(entity);
       return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public ResponseEntity<CartsDTO> update(@RequestBody CartsDTO dto) {
      Carts entity = mapper.toEntity(dto);
       entity = service.update(entity);
       return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public ResponseEntity<Page<CartsDTO>> read(
            @RequestBody CartsDTO dto,
            @RequestParam("page") Integer page,
            @RequestParam("size") Integer size) {
        Pageable pageable = PageRequest.of(page,size);
        Carts entity = mapper.toEntity(dto);
        Page<CartsDTO> pages = service.read(entity, pageable).map(mapper::toDto);
        return ResponseEntity.ok(pages);
    }

    @Override
    public ResponseEntity<CartsDTO> readOne(@PathVariable("id") java.lang.Integer primaryKey) {
         Carts entity = service.readOne(primaryKey);
         return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public void delete(java.lang.Integer primaryKey) {
        service.delete(primaryKey);
    }
}